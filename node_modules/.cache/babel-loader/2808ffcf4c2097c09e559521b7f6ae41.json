{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoryApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([apiRequestCate]);\n  const [post, setPost] = useState([postApi]); // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật product \n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Xóa danh mục\n\n  const onHandleRemoveCate = async id => {\n    try {\n      const {\n        data\n      } = await apiRequestCate.remove(id);\n      const newCategories = categories.filter(category => category.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm danh mục\n\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await apiRequestCate.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('failed to request API: ', error);\n    }\n  }; // Cập nhật danh mục\n\n\n  const onHandleUpdateCate = async updateCategories => {\n    const newCategories = categories.map(Categories => Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequestCate.update(updateCategories.id, updateCategories);\n    setCategories(newCategories);\n  }; //Post\n  //List post\n\n\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const {\n          data\n        } = await postApi.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getPost();\n  }, []); //Xóa bài viết\n  // Xóa sản phẩm\n\n  const onHandleRemovePost = async id => {\n    try {\n      const {\n        data\n      } = await postApi.remove(id);\n      const newPost = post.filter(posts => posts.id !== id);\n      setPost(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm bài viết\n\n\n  const onHandleAddPost = async posts => {\n    console.log(posts);\n\n    try {\n      const {\n        data\n      } = await postApi.create(posts);\n      setPost([...post, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Sửa bài viết\n\n\n  const onHandleUpdatePost = async updatePost => {\n    const newPost = post.map(Post => Post.id === updatePost.id ? updatePost : Post // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await postApi.update(updatePost.id, updatePost);\n    setPost(newPost);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    categories: categories,\n    onRemoveCate: onHandleRemoveCate,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    post: post,\n    onRemovePost: onHandleRemovePost,\n    onAddPost: onHandleAddPost,\n    onUpdatePost: onHandleUpdatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","apiRequestCate","App","products","setProducts","categories","setCategories","post","setPost","postApi","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleUpdate","updateProducts","map","Products","update","getCategories","onHandleRemoveCate","newCategories","category","onHandleAddCate","onHandleUpdateCate","updateCategories","Categories","getPost","onHandleRemovePost","newPost","posts","onHandleAddPost","onHandleUpdatePost","updatePost","Post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport apiRequestCate from './api/categoryApi'\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState ([apiRequestCate]);\n  const [post, setPost] = useState([postApi]);\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n \n\n\n   // Xóa sản phẩm\n   const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n\n\n  // Cập nhật product \n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await apiRequestCate.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n\n  // Xóa danh mục\n  const onHandleRemoveCate = async (id) => {\n    try {\n      const { data } = await apiRequestCate.remove(id);\n      const newCategories = categories.filter((category) => category.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm danh mục\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await apiRequestCate.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('failed to request API: ', error)\n    }\n  }\n  // Cập nhật danh mục\n  const onHandleUpdateCate = async (updateCategories) => {\n    const newCategories = categories.map(\n      (Categories) =>\n        Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequestCate.update(updateCategories.id, updateCategories);\n    setCategories(newCategories);\n  };\n  //Post\n      //List post\n      useEffect(() => {\n        const getPost = async () => {\n          try {\n            const { data } = await postApi.getAll();\n            setPost(data);\n          } catch (error) {\n            console.log(\"failed to request API: \", error);\n          }\n        };\n        getPost();\n      }, []);\n          //Xóa bài viết\n           // Xóa sản phẩm\n      const onHandleRemovePost = async (id) => {\n        try {\n          const { data } = await postApi.remove(id);\n          const newPost = post.filter((posts) => posts.id !== id);\n          setPost(newPost);\n        } catch (error) {\n          console.log(\"failed to request API: \", error);\n        }\n      };\n    \n        // Thêm bài viết\n        const onHandleAddPost = async (posts) => {\n          console.log(posts)\n          try {\n            const { data } = await postApi.create(posts);\n            setPost([...post, data]);\n          } catch (error) {\n            console.log(\"failed to request API: \", error);\n          }\n        };\n          //Sửa bài viết\n      const  onHandleUpdatePost = async (updatePost) => {\n        const newPost = post.map(\n          (Post) =>\n          Post.id === updatePost.id ? updatePost : Post // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n        );\n        const { data } = await postApi.update(updatePost.id, updatePost);\n        setPost(newPost);\n      };\n\n  return (\n    <div className=\"App\">\n      <Routers products={products} onRemove={onHandleRemove} onAdd={onHandleAdd} onUpdate={onHandleUpdate}\n      categories={categories} onRemoveCate={onHandleRemoveCate} onAddCate={onHandleAddCate} onUpdateCate={onHandleUpdateCate}\n      post = {post}\n      onRemovePost = {onHandleRemovePost}\n      onAddPost = {onHandleAddPost}\n      onUpdatePost = {onHandleUpdatePost}/>\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}